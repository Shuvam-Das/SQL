USE COACHX_LIVE
SELECT *FROM [dbo].[AGENT]

UPDATE AGENT
SET AGENT_NAME = 'EARDEN'
WHERE AGENT_ID = 7844

UPDATE AGENT
SET JOB ='LEAD',SALARY =4500
WHERE AGENT_NAME = 'SMITH'
-------------------------
SELECT *FROM AGENT

ALTER TABLE AGENT
ADD MAIL_ID VARCHAR(255)

ALTER TABLE AGENT
ADD MOBILE_NO BIGINT,CITY CHAR(255)

UPDATE AGENT
SET MAIL_ID = 'smith.joy@amazon.com', CITY ='CHENNAI'
WHERE AGENT_id =7369

ALTER TABLE AGENT
DROP COLUMN CITY

ALTER TABLE AGENT
ALTER COLUMN COLUMN_NAME DATATYPE

ALTER TABLE AGENT
ALTER COLUMN AGENT_NAME CHAR(150)

ALTER TABLE AGENT
ADD PRIMARY KEY(AGENT_ID)

ALTER TABLE COURSE
ADD FOREIGN KEY(STUDENT)
REFERENCES COURSE(COURSE_ID)
 
/*DDL- Defination- CREATE,ALTER,DROP,TRUNCATE,RENAME
DML- DEFINATION- INSERT,UPDATE,SELECT
*/
--HOW TO RENAME A COLUMN--
EXEC sp_rename 'AGENT.AGENT_NAME', 'FIRST_NAME','COLUMN';

SP_RENAME 'AGENT.JOB','TITLE'

SP_RENAME 'AGENT.SALARY','PAYMENT','COLUMN'

--HOW TO RENAME A TABLE--

SP_RENAME 'AGENT','TABLE_AGENT'
SP_RENAME 'TABLE_AGENT1','AGENT'

SELECT *FROM AGENT

---SET OPERATIONS--
/* UNION,UNION ALL,INTERSECT(MINUS),EXCEPT
combile 2 or more SELECT statement
Similar SQL joins
SQL joins-Combine Column from different Tables
SET Operators-combine Rows different queries

Rules
1.Same no of COLUMNS
Query1:ID,FN,LN,CT //No of column and there position should be same 
Query2:ID,FN,LN,CT //No of column and there position should be same 

2. Databse of each column must match-corresponding columns
3.Order by-Where by
--------------------------
union - Remove the dublicates
union all-Combine all
intersect- Only common data
except- first select statement Result is considered

*/

CREATE TABLE EMPLOYEE
(
ID INT,
NAMES VARCHAR(100),
DEPT VARCHAR(200),
)

CREATE TABLE MANAGER
(
NAMES VARCHAR(100),
DEPT VARCHAR(200),
)

SELECT *FROM EMPLOYEE
SELECT *FROM MANAGER

--- Write a SQL Query to return all the details of the EMP from the EMP and Manager table, Also remove duplicate records ---

SELECT * FROM EMPLOYEE

UNION ---- REMOVE DUPLICATES

SELECT * FROM MANAGER
SELECT * FROM EMPLOYEE

UNION ALL ---- RETAIN ALL ROWS OF ALL THE SELECT STATEMENTS, INCLUDING ANY DUPLICATES
SELECT * FROM MANAGER
SELECT * FROM EMPLOYEE

INTERSECT ---- ONLY COMMON DATA

SELECT * FROM MANAGER
-- WRITE A SQL QUERY TO FETCH ALL THE DETAILS OF THE EMP, WHO ARE NOT MANAGERS FROM THE EMP TABLE --
SELECT * FROM EMPLOYEE
EXCEPT ---- FETCH DATA FROM THE FIRST SELECT QUERY
SELECT * FROM MANAGER



